// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArtifactsManager .artifactsApi .requestIdleCallback() should catch errors, report them if callback fails, and move on  1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onIdleCallback error],
      "event": "PLUGIN_ERROR",
      "methodName": "onIdleCallback",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onIdleCallback",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi .requestIdleCallback() should gracefully handle a case when plugin object is not passed and use "unknown" as a name placeholder 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onIdleCallback error],
      "event": "PLUGIN_ERROR",
      "methodName": "onIdleCallback",
      "plugin": "unknown",
    },
    "Caught exception inside plugin (unknown) at phase onIdleCallback",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onAfterAll errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onAfterAll error],
      "event": "PLUGIN_ERROR",
      "methodName": "onAfterAll",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onAfterAll",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onAfterEach errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onAfterEach error],
      "event": "PLUGIN_ERROR",
      "methodName": "onAfterEach",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onAfterEach",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeAll errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeAll error],
      "event": "PLUGIN_ERROR",
      "methodName": "onBeforeAll",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onBeforeAll",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeEach errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeEach error],
      "event": "PLUGIN_ERROR",
      "methodName": "onBeforeEach",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onBeforeEach",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeRelaunchApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeRelaunchApp error],
      "event": "PLUGIN_ERROR",
      "methodName": "onBeforeRelaunchApp",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onBeforeRelaunchApp",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeResetDevice errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeResetDevice error],
      "event": "PLUGIN_ERROR",
      "methodName": "onBeforeResetDevice",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onBeforeResetDevice",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onRelaunchApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onRelaunchApp error],
      "event": "PLUGIN_ERROR",
      "methodName": "onRelaunchApp",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onRelaunchApp",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onResetDevice errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onResetDevice error],
      "event": "PLUGIN_ERROR",
      "methodName": "onResetDevice",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onResetDevice",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onTerminate errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onTerminate error],
      "event": "PLUGIN_ERROR",
      "methodName": "onTerminate",
      "plugin": "testPlugin",
    },
    "Caught exception inside plugin (testPlugin) at phase onTerminate",
  ],
]
`;

exports[`ArtifactsManager when created should provide partially working artifacts api, where .getBundleId() throws 1`] = `"DetoxRuntimeError: Detox Artifacts API had no bundleId at the time of calling"`;

exports[`ArtifactsManager when created should provide partially working artifacts api, where .getDeviceId() throws 1`] = `"DetoxRuntimeError: Detox Artifacts API had no deviceId at the time of calling"`;

exports[`ArtifactsManager when created should provide partially working artifacts api, where .getPid() throws 1`] = `"DetoxRuntimeError: Detox Artifacts API had no app PID at the time of calling"`;

exports[`ArtifactsManager when plugin factory is registered and the app is about to be launched for the first time still should not be able to get PID from artifacts API 1`] = `"DetoxRuntimeError: Detox Artifacts API had no app PID at the time of calling"`;
