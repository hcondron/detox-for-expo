// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArtifactsManager .artifactsApi .requestIdleCallback() should catch errors, report them if callback fails, and move on  1`] = `Array []`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onAfterAll errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onAfterAll error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onAfterAll",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onAfterAll()",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onAfterEach errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onAfterEach error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onAfterEach",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onAfterEach({ title: 'test', fullName: 'Suite test', status: 'passed' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeAll errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeAll error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeAll",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeAll()",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeEach errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeEach error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeEach",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeEach({ title: 'test', fullName: 'Suite test', status: 'running' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeLaunchApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeLaunchApp error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeLaunchApp",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeLaunchApp({ bundleId: 'testBundleId', deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeShutdownDevice errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeShutdownDevice error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeShutdownDevice",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeShutdownDevice({ deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeTerminateApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeTerminateApp error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeTerminateApp",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeTerminateApp({ bundleId: 'testBundleId', deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBeforeUninstallApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBeforeUninstallApp error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBeforeUninstallApp",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBeforeUninstallApp({ bundleId: 'testBundleId', deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onBootDevice errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onBootDevice error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onBootDevice",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onBootDevice({ coldBoot: false, deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onLaunchApp errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onLaunchApp error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onLaunchApp",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onLaunchApp({ bundleId: 'testBundleId', deviceId: 'testDeviceId', pid: 2018 })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onShutdownDevice errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onShutdownDevice error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onShutdownDevice",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onShutdownDevice({ deviceId: 'testDeviceId' })",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onTerminate errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onTerminate error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onTerminate",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onTerminate()",
  ],
]
`;

exports[`ArtifactsManager .artifactsApi hooks error handling should catch .onUserAction errors 1`] = `
Array [
  Array [
    Object {
      "err": [Error: test onUserAction error],
      "event": "SUPPRESS_PLUGIN_ERROR",
      "methodName": "onUserAction",
      "plugin": "testPlugin",
    },
    "Suppressed error inside function call: testPlugin.onUserAction({ type: 'takeScreenshot', options: { name: 'open app' } })",
  ],
]
`;
